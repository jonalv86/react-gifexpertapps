{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCNlBG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAKhC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCVHK,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdN,EADc,iDACkCO,UAAUF,GAD5C,+DAEDG,MAAMR,GAFL,cAEdS,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATtB,kBAabY,GAba,4CAAH,sDCMRM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAGrB,ECNwB,SAACA,GACzB,MAA0BpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAyBA,OApBAC,qBAAU,WACNlB,EAASC,GACJkB,MAAK,SAAAC,GAGFH,EAAS,CACLV,KAAKa,EACLL,SAAS,SAItB,CAACd,IASGe,EDpB2BK,CAAapB,GAAjCW,EAAd,EAAQL,KAAcQ,EAAtB,EAAsBA,QAatB,OACI,qCACI,oBAAIlB,UAAU,oCAAd,SAAmDI,IAEjDc,GAAW,mBAAGlB,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQe,EAAOH,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAGSA,GAFCA,EAAIC,aE5BzBW,EAAe,WAGxB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOA,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAIA,6BAEQ2C,EAAWd,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCtBjCuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1ec7580f.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\"\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","// export const GifGridItem = (props) => {\r\n    // Abajo es lo mismo\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n\r\n    // console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifts = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=NUoqqqsCPYANFdERJ387WV0NmAvQkeSk`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    // console.log(gifs);\r\n    return gifs;\r\n};","// import { useState, useEffect } from \"react\";\r\n// import { getGifts } from \"../helpers/getGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [count, setCount] = useState(0);\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    // Ejecuta esta instrucción cuando el código es llamado por primera vez\r\n    // const [images, setImages] = useState([]);\r\n    \r\n    // useEffect(() => {\r\n    //     getGifts(category)\r\n    //         // .then(imgs => setImages(imgs));\r\n    //         .then(setImages); // El primer argumento lo usa automáticamente\r\n    // }, [ category ]);\r\n\r\n    // getGifts();\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            // Manda las propiedades como props independientes\r\n                            { ...img }  \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            {/* { loading ? 'Cargando...' : 'Data cargada' } */}\r\n            {/* <div className=\"card-grid\">\r\n                {/* <h3>{category}</h3> */}\r\n                {/* <h3>{count}</h3>\r\n                <button onClick={ () => setCount(count + 1) }></button> */}\r\n                {/* <ol> */}\r\n                    {/* <li>item</li> */}\r\n                    {/* {\r\n                        images.map(({id, title}) => (\r\n                            <li key={id}>{title}</li>\r\n                        ))\r\n                    } */}\r\n                {/* </ol> * /}\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            // Manda las propiedades como props independientes\r\n                            { ...img }  \r\n                        />\r\n                    ))\r\n                }\r\n            </div> */}\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifts(category)\r\n            .then(imgs => {\r\n                // setTimeout(() => {\r\n                    // console.log(imgs)\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                });\r\n                // }, 3000);\r\n            })\r\n    }, [category]);\r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data: [1,2,3,4,5,6,7],\r\n    //         loading: false\r\n    //     });\r\n    // }, 3000);\r\n\r\n    return state;\r\n}\r\n","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = (e) => {\r\n    //     // setCategories([...categories, 'Saint Seiya']);\r\n    //     setCategories(cats => [...cats, 'Saint Seiya']);\r\n    // };\r\n\r\n    return(\r\n        <>\r\n            <h2>GitExpertApp</h2>\r\n\r\n            <AddCategory setCategories={ setCategories } />\r\n\r\n            <hr />\r\n\r\n            {/* <button onClick={ () => handleAdd() }>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}